<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Yuyu&#39;s Blog</title>
        <link>https://yzxiu.github.io/</link>
        <description>Yuyu&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 10 Jun 2023 20:22:28 &#43;0800</lastBuildDate>
            <atom:link href="https://yzxiu.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>virtualbox 使用命令行创建虚拟机</title>
    <link>https://yzxiu.github.io/2023-06-10-virtualbox-client/</link>
    <pubDate>Sat, 10 Jun 2023 20:22:28 &#43;0800</pubDate>
    <author>Yuyu</author>
    <guid>https://yzxiu.github.io/2023-06-10-virtualbox-client/</guid>
    <description><![CDATA[概述： virtualbox 使用命令行创建虚拟机，要求使用现有的vdi文件作为硬盘，网络使用enp3s0作为侨接 以下是使用命令行创建虚拟机的步骤： 打开终端，进入]]></description>
</item>
<item>
    <title>Docker安装Ceph-Nautilus</title>
    <link>https://yzxiu.github.io/2023-02-06-docker-ceph-nautilus/</link>
    <pubDate>Mon, 06 Feb 2023 09:15:38 &#43;0800</pubDate>
    <author>Yuyu</author>
    <guid>https://yzxiu.github.io/2023-02-06-docker-ceph-nautilus/</guid>
    <description><![CDATA[概述 安装ceph-nautilus(14.2.22)测试环境，用于调试/学习ceph-csi 安装ceph-nautilus 环境 centos-41 192.168.4.41 CentOS Linux release 7.8.2003 (Core)]]></description>
</item>
<item>
    <title>client-go解析(7) - Reconcile</title>
    <link>https://yzxiu.github.io/2023-02-01-client-go-7-reconcile/</link>
    <pubDate>Wed, 01 Feb 2023 16:47:48 &#43;0800</pubDate>
    <author>Yuyu</author>
    <guid>https://yzxiu.github.io/2023-02-01-client-go-7-reconcile/</guid>
    <description><![CDATA[概述 使用过 kubebuilder 开发Operator项目的话，对 Reconcile 函数应该不陌生。 由于 kubebuilder(controller-runtime)的高度封装，]]></description>
</item>
<item>
    <title>client-go解析(6) - Factory</title>
    <link>https://yzxiu.github.io/2023-01-31-client-go-6-informer-factory/</link>
    <pubDate>Tue, 31 Jan 2023 11:02:24 &#43;0800</pubDate>
    <author>Yuyu</author>
    <guid>https://yzxiu.github.io/2023-01-31-client-go-6-informer-factory/</guid>
    <description><![CDATA[概述 sharedIndexInformer 一般不单独使用，通常都是使用 factory 来管理 sharedIndexInformer。 本文主要了解几种常见的 factory 以及它们如何构造和持有 sharedIndexInformer SharedInformerFactory 1 2 3 4]]></description>
</item>
<item>
    <title>client-go解析(5) - informer &amp; sharedIndexInformer</title>
    <link>https://yzxiu.github.io/2023-01-16-client-go-5-informer/</link>
    <pubDate>Mon, 16 Jan 2023 22:03:11 &#43;0800</pubDate>
    <author>Yuyu</author>
    <guid>https://yzxiu.github.io/2023-01-16-client-go-5-informer/</guid>
    <description><![CDATA[概述 NewSharedIndexInformer() 是出镜率非常高的函数，最终创建了一个 sharedIndexInformer。 我们这里暂且将常说的 “informer” 等同于 shared]]></description>
</item>
<item>
    <title>client-go解析(4) - cache.Controller</title>
    <link>https://yzxiu.github.io/2023-01-15-client-go-4-cache-controller/</link>
    <pubDate>Sun, 15 Jan 2023 18:35:14 &#43;0800</pubDate>
    <author>Yuyu</author>
    <guid>https://yzxiu.github.io/2023-01-15-client-go-4-cache-controller/</guid>
    <description><![CDATA[概述 本文中提到的 reflector, 特指 informer 中的 reflector, 即传入的 cache.Store 为 DeltaFIFO。 接口 cache.Controller 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 // Controller is a low-level controller that is parameterized by a // Config and used in]]></description>
</item>
<item>
    <title>client-go解析(3) - cache.Reflector</title>
    <link>https://yzxiu.github.io/2023-01-14-client-go-3-reflector/</link>
    <pubDate>Sat, 14 Jan 2023 23:45:36 &#43;0800</pubDate>
    <author>Yuyu</author>
    <guid>https://yzxiu.github.io/2023-01-14-client-go-3-reflector/</guid>
    <description><![CDATA[概述 cache.Reflector 可以说是k8s最重要的组件，它串联起k8s的整个流程。 在服务端(apiserver) ，使用 reflector 向 etcd 获取资源数据。 在连接端(informe]]></description>
</item>
<item>
    <title>client-go解析(2) - cache.Store</title>
    <link>https://yzxiu.github.io/2023-01-12-client-go-2-cache-store/</link>
    <pubDate>Thu, 12 Jan 2023 21:39:15 &#43;0800</pubDate>
    <author>Yuyu</author>
    <guid>https://yzxiu.github.io/2023-01-12-client-go-2-cache-store/</guid>
    <description><![CDATA[概述 如果把k8s当成资源管理系统, 那cache.Store无疑是最核心的接口, 用于缓存,存储资源 。 reflector 依赖于 cache.Store 的实现做存储，根据不同的实现有不]]></description>
</item>
<item>
    <title>client-go解析(1)</title>
    <link>https://yzxiu.github.io/2023-01-12-client-go-1/</link>
    <pubDate>Thu, 12 Jan 2023 09:52:51 &#43;0800</pubDate>
    <author>Yuyu</author>
    <guid>https://yzxiu.github.io/2023-01-12-client-go-1/</guid>
    <description><![CDATA[概述 k8s许多重要的基础类型，都在client-go中定义。 如 cache.Store、cache.Reflector等。 接下来分析这些重要的]]></description>
</item>
<item>
    <title>Containerd解析(12) - network</title>
    <link>https://yzxiu.github.io/2022-12-02-containerd-12-containerd-network/</link>
    <pubDate>Fri, 02 Dec 2022 09:45:30 &#43;0800</pubDate>
    <author>Yuyu</author>
    <guid>https://yzxiu.github.io/2022-12-02-containerd-12-containerd-network/</guid>
    <description><![CDATA[概述 分析containerd网络，从不同的上层应用： nerdctl run -d &ndash;name runcdev -p 8080:80 nginx kubectl run nginx &ndash;image=nginx 根据containerd 的 Scope and principles The following table specifies the various components of containerd and general features of container runtimes. The]]></description>
</item>
</channel>
</rss>
